/* Estilos específicos para a página de gerenciamento de componentes */

/* Grid de componentes */
.componentsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: var(--spacing-lg);
  margin-bottom: var(--spacing-xl);
}

/* Card de componente */
.componentCard {
  background-color: var(--surface);
  border-radius: var(--radius);
  border: 1px solid var(--border);
  overflow: hidden;
  transition: var(--transition);
  box-shadow: var(--shadow-sm);
  display: flex;
  flex-direction: column;
  height: 100%;
}

.componentCard:hover {
  box-shadow: var(--shadow-md);
  transform: translateY(-2px);
  border-color: rgba(var(--primary-rgb), 0.3);
}

/* Cabeçalho do card */
.componentHeader {
  padding: var(--spacing-md);
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid var(--border);
  background-color: var(--surface);
}

.componentName {
  font-size: var(--font-size-base);
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
  max-width: 180px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.componentCategory {
  font-size: var(--font-size-sm);
  color: var(--primary);
  background-color: rgba(var(--primary-rgb), 0.1);
  padding: 4px 10px;
  border-radius: var(--radius-full);
  font-weight: 500;
}

/* Preview do componente */
.componentPreview {
  height: 100px;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
}

/* Overlay para o preview */
.previewOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.2s ease;
  pointer-events: none;
}

.componentCard:hover .previewOverlay {
  opacity: 1;
}

.previewOverlay span {
  background-color: var(--surface);
  color: var(--text-primary);
  padding: 8px 16px;
  border-radius: var(--radius);
  font-size: 14px;
  font-weight: 500;
}

.componentCard {
  cursor: pointer;
}

/* Código CSS */
.componentCode {
  padding: var(--spacing-md);
  background-color: var(--surface-secondary);
  color: var(--text-secondary);
  font-family: monospace;
  font-size: 0.85rem;
  line-height: 1.5;
  white-space: pre-wrap;
  overflow: hidden;
  flex-grow: 1;
  max-height: 100px;
  position: relative;
}

.componentCode::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 30px;
  background: linear-gradient(transparent, var(--surface-secondary));
}

/* Ações */
.componentActions {
  padding: var(--spacing-md);
  display: flex;
  justify-content: space-between;
  border-top: 1px solid var(--border);
}

.actionButton {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 6px 12px;
  border-radius: var(--radius-sm);
  font-size: var(--font-size-sm);
  font-weight: 500;
  border: none;
  cursor: pointer;
  transition: var(--transition);
}

.editButton {
  color: var(--primary);
  background-color: rgba(var(--primary-rgb), 0.1);
}

.editButton:hover {
  background-color: rgba(var(--primary-rgb), 0.2);
}

.deleteButton {
  color: var(--google-red);
  background-color: rgba(239, 68, 68, 0.1);
}

.deleteButton:hover {
  background-color: rgba(239, 68, 68, 0.2);
}

.confirmDeleteButton {
  background-color: var(--google-red);
  color: white;
  padding: 8px 16px;
  border-radius: var(--radius-sm);
  font-weight: 500;
  border: none;
  cursor: pointer;
  transition: background-color 0.2s;
}

.confirmDeleteButton:hover {
  background-color: var(--google-red-dark);
}

/* Modal para confirmação de exclusão */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.modalContent {
  background-color: var(--surface);
  border-radius: var(--radius);
  padding: var(--spacing-lg);
  width: 100%;
  max-width: 400px;
  box-shadow: var(--shadow-lg);
  border: 1px solid var(--border);
}

.modalTitle {
  margin-top: 0;
  margin-bottom: var(--spacing-md);
  color: var(--text-primary);
  font-size: var(--font-size-lg);
  font-weight: 600;
}

.modalActions {
  display: flex;
  justify-content: flex-end;
  gap: var(--spacing-md);
  margin-top: var(--spacing-lg);
}

.cancelButton {
  background-color: var(--surface-secondary);
  color: var(--text-secondary);
  padding: 8px 16px;
  border-radius: var(--radius-sm);
  font-weight: 500;
  border: 1px solid var(--border);
  cursor: pointer;
  transition: background-color 0.2s;
}

.cancelButton:hover {
  background-color: var(--surface-hover);
}

/* Formulários */
.componentForm {
  padding: var(--spacing-lg);
}

.formTitle {
  margin-top: 0;
  margin-bottom: var(--spacing-lg);
  color: var(--text-primary);
  font-size: var(--font-size-lg);
  font-weight: 600;
  padding-bottom: var(--spacing-sm);
  border-bottom: 1px solid var(--border);
  position: relative;
}

.formTitle::after {
  content: '';
  position: absolute;
  bottom: -1px;
  left: 0;
  width: 50px;
  height: 3px;
  background: linear-gradient(90deg, var(--primary), var(--primary-light));
  border-radius: 3px;
}

.formGroup {
  margin-bottom: var(--spacing-lg);
}

.formGroup label {
  display: block;
  margin-bottom: var(--spacing-sm);
  font-weight: 500;
  color: var(--text-primary);
}

.formInput,
.formSelect,
.formTextarea {
  width: 100%;
  padding: var(--spacing-md);
  border: 1px solid var(--border);
  border-radius: var(--radius-sm);
  background-color: var(--surface);
  color: var(--text-primary);
  font-size: var(--font-size-base);
  transition: border-color 0.2s;
}

.formInput:focus,
.formSelect:focus,
.formTextarea:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.2);
}

.formTextarea {
  min-height: 150px;
  resize: vertical;
  font-family: monospace;
}

.formActions {
  display: flex;
  justify-content: flex-end;
  gap: var(--spacing-md);
  margin-top: var(--spacing-lg);
}

.submitButton {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  background-color: var(--primary);
  color: white;
  padding: 10px 20px;
  border-radius: var(--radius-sm);
  font-size: var(--font-size-base);
  font-weight: 500;
  border: none;
  cursor: pointer;
  transition: background-color 0.2s;
}

.submitButton:hover:not(:disabled) {
  background-color: var(--primary-dark);
}

.submitButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.colorPickerContainer {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
}

.colorPreview {
  width: 32px;
  height: 32px;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border);
}

/* Estados de carregamento e erros */
.loadingContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: var(--spacing-xl);
}

.loadingSpinner {
  width: 50px;
  height: 50px;
  border: 4px solid rgba(var(--primary-rgb), 0.2);
  border-radius: 50%;
  border-top-color: var(--primary);
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.errorMessage {
  display: flex;
  align-items: center;
  padding: var(--spacing-md);
  background-color: rgba(239, 68, 68, 0.1);
  color: var(--google-red);
  border-radius: var(--radius-sm);
  margin-bottom: var(--spacing-lg);
  gap: var(--spacing-sm);
}

/* Estado vazio */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-xl) 0;
  text-align: center;
}

.emptyState svg {
  color: var(--text-tertiary);
  margin-bottom: var(--spacing-md);
}

.emptyState h3 {
  margin: 0 0 var(--spacing-sm) 0;
  color: var(--text-primary);
}

.emptyState p {
  color: var(--text-secondary);
  max-width: 400px;
  margin: 0 0 var(--spacing-lg) 0;
}

/* Responsividade */
@media (max-width: 768px) {
  .componentsGrid {
    grid-template-columns: 1fr;
  }
  
  .modalContent {
    max-width: 90%;
  }
}

/* Pequena animação para componentes */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.componentCard {
  animation: fadeIn 0.3s ease-out forwards;
}

/* Spinner para dentro de botões */
.smallSpinner {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: white;
  animation: spin 1s linear infinite;
  margin-right: 8px;
}

/* Notificação de cópia */
.notification {
  position: fixed;
  bottom: 24px;
  right: 24px;
  background-color: var(--primary);
  color: white;
  padding: 12px 20px;
  border-radius: var(--radius);
  box-shadow: var(--shadow-md);
  z-index: 1000;
  animation: slideIn 0.3s ease-out forwards, fadeOut 0.3s ease-in forwards 2s;
}

@keyframes slideIn {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* Backdrop overlay */
.backdropOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  z-index: 90;
  animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

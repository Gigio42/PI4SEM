/* Estilos específicos para a página de gerenciamento de componentes */

/* Grid de componentes */
.componentsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: var(--spacing-lg);
  margin-bottom: var(--spacing-xl);
  padding: 1rem;
}

/* Card de componente */
.componentCard {
  background-color: var(--surface);
  border-radius: var(--radius);
  border: 1px solid var(--border);
  overflow: hidden;
  transition: var(--transition);
  box-shadow: var(--shadow-sm);
  display: flex;
  flex-direction: column;
  height: 100%;
  position: relative;
}

.componentCard:hover {
  box-shadow: var(--shadow-md);
  transform: translateY(-2px);
  border-color: var(--border);
}

/* Cabeçalho do card */
.componentHeader {
  padding: var(--spacing-md);
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid var(--border);
  background-color: var(--surface);
}

.componentName {
  font-size: var(--font-size-base);
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
  max-width: 180px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.componentCategory {
  font-size: var(--font-size-xs);
  color: var(--text-secondary);
  background-color: var(--surface-secondary);
  padding: 4px 10px;
  border-radius: var(--radius-full);
  font-weight: 500;
  border: 1px solid var(--border);
}

/* Preview do componente */
.componentPreview {
  height: 140px;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
  transition: var(--transition);
  background-position: center;
  background-size: cover;
}

/* Overlay para o preview */
.previewOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(2px);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: var(--transition);
  pointer-events: none;
}

.componentCard:hover .previewOverlay {
  opacity: 1;
}

.previewOverlay span {
  background-color: var(--surface);
  color: var(--text-primary);
  padding: 8px 16px;
  border-radius: var(--radius-sm);
  font-size: var(--font-size-sm);
  font-weight: 500;
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border);
}

.componentCard {
  cursor: pointer;
}

/* Código CSS */
.componentCode {
  padding: var(--spacing-md);
  background-color: var(--surface-secondary);
  color: var(--text-secondary);
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
  font-size: 0.85rem;
  line-height: 1.5;
  white-space: pre-wrap;
  overflow: hidden;
  flex-grow: 1;
  max-height: 100px;
  position: relative;
  border-top: 1px solid var(--border);
}

.componentCode::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 30px;
  background: linear-gradient(transparent, var(--surface-secondary));
  pointer-events: none;
}

/* Ações */
.componentActions {
  padding: var(--spacing-md);
  display: flex;
  justify-content: space-between;
  border-top: 1px solid var(--border);
  background-color: var(--surface);
}

.actionButton {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 8px 12px;
  border-radius: var(--radius-sm);
  font-size: var(--font-size-xs);
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition);
  background-color: var(--surface-secondary);
  border: 1px solid var(--border);
  color: var(--text-secondary);
}

.actionButton:hover {
  background-color: var(--surface-hover);
  color: var(--text-primary);
}

.editButton {
  color: var(--primary);
}

.deleteButton {
  color: var(--text-secondary);
}

/* Form styling */
.componentForm {
  padding: var(--spacing-lg);
  background-color: var(--surface);
  border-radius: var(--radius);
  border: 1px solid var(--border);
  box-shadow: var(--shadow-sm);
}

.formTitle {
  font-size: var(--font-size-lg);
  font-weight: 600;
  color: var(--text-primary);
  margin: 0 0 var(--spacing-lg) 0;
  padding-bottom: var(--spacing-sm);
  border-bottom: 1px solid var(--border);
  position: relative;
}

.formTitle::after {
  content: '';
  position: absolute;
  bottom: -1px;
  left: 0;
  width: 60px;
  height: 2px;
  background-color: var(--primary);
}

.formGroup {
  margin-bottom: var(--spacing-md);
}

.formGroup label {
  display: block;
  font-size: var(--font-size-sm);
  font-weight: 500;
  color: var(--text-primary);
  margin-bottom: var(--spacing-xs);
}

.formInput, .formSelect, .formTextarea {
  width: 100%;
  padding: 10px 12px;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border);
  background-color: var(--surface);
  color: var(--text-primary);
  font-size: var(--font-size-sm);
  transition: var(--transition);
}

.formInput:focus, .formSelect:focus, .formTextarea:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.1);
}

.formTextarea {
  resize: vertical;
  min-height: 100px;
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
  line-height: 1.5;
}

.formSelect {
  -webkit-appearance: none;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%236b7280' stroke-width='2'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 12px center;
  background-size: 16px;
  padding-right: 36px;
}

.colorPickerContainer {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.colorPreview {
  width: 24px;
  height: 24px;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border);
  flex-shrink: 0;
}

.formActions {
  display: flex;
  justify-content: flex-end;
  gap: var(--spacing-md);
  margin-top: var(--spacing-lg);
  padding-top: var(--spacing-md);
  border-top: 1px solid var(--border);
}

.submitButton, .cancelButton {
  padding: 10px 16px;
  border-radius: var(--radius-sm);
  font-size: var(--font-size-sm);
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition);
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.submitButton {
  background-color: var(--primary);
  color: white;
  border: none;
}

.submitButton:hover:not(:disabled) {
  background-color: var(--primary-dark);
}

.cancelButton {
  background-color: var(--surface);
  color: var(--text-secondary);
  border: 1px solid var(--border);
}

.cancelButton:hover:not(:disabled) {
  background-color: var(--surface-hover);
  color: var(--text-primary);
}

.togglePreviewButton {
  padding: 8px 12px;
  border-radius: var(--radius-sm);
  font-size: var(--font-size-sm);
  background-color: var(--surface-secondary);
  color: var(--text-primary);
  border: 1px solid var(--border);
  cursor: pointer;
  transition: var(--transition);
  margin-bottom: var(--spacing-md);
}

.togglePreviewButton:hover {
  background-color: var(--surface-hover);
}

.previewToggle {
  margin-bottom: var(--spacing-md);
}

.errorMessage {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-md);
  background-color: var(--surface-secondary);
  color: var(--text-primary);
  border-radius: var(--radius-sm);
  margin-bottom: var(--spacing-md);
  border-left: 3px solid var(--primary);
}

.smallSpinner {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: white;
  animation: spin 0.8s linear infinite;
  display: inline-block;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Modal styling */
/* Rest of the modal styling remains the same */

/* Responsividade */
@media (max-width: 768px) {
  .componentsGrid {
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
    padding: 0.5rem;
    gap: var(--spacing-md);
  }
  
  .componentForm {
    padding: var(--spacing-md);
  }
  
  .formActions {
    flex-direction: column-reverse;
  }
  
  .submitButton, .cancelButton {
    width: 100%;
    justify-content: center;
  }
}

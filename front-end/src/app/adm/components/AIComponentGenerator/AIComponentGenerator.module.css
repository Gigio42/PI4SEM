.container {
  width: 100%;
  max-height: 90vh;
  overflow-y: auto;
  background-color: var(--surface);
}

.header {
  padding: var(--spacing-lg);
  background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
  color: white;
  position: sticky;
  top: 0;
  z-index: 10;
}

.headerContent {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex: 1;
}

.title {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  font-size: var(--font-size-xl);
  font-weight: 700;
  margin: 0;
}

.aiIcon {
  font-size: 28px;
  animation: sparkle 2s ease-in-out infinite;
}

@keyframes sparkle {
  0%, 100% { transform: scale(1) rotate(0deg); }
  50% { transform: scale(1.1) rotate(5deg); }
}

.statusIndicator {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  font-size: var(--font-size-sm);
  opacity: 0.9;
}

.statusDot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  animation: pulse 2s infinite;
}

.statusOnline {
  background-color: #10b981;
}

.statusOffline {
  background-color: #ef4444;
}

@keyframes pulse {
  0% { transform: scale(0.95); opacity: 0.7; }
  70% { transform: scale(1); opacity: 1; }
  100% { transform: scale(0.95); opacity: 0.7; }
}

.closeButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  background: rgba(255, 255, 255, 0.1);
  border: none;
  color: white;
  cursor: pointer;
  border-radius: var(--radius);
  transition: var(--transition-base);
  backdrop-filter: blur(10px);
}

.closeButton:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: scale(1.05);
}

.form {
  padding: var(--spacing-lg);
}

.warningAlert {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-md);
  background-color: rgba(245, 158, 11, 0.1);
  border: 1px solid rgba(245, 158, 11, 0.3);
  border-radius: var(--radius);
  color: #d97706;
  margin-bottom: var(--spacing-lg);
  font-size: var(--font-size-sm);
  font-weight: 500;
}

.formRow {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--spacing-lg);
  margin-bottom: var(--spacing-lg);
}

.formGroup {
  margin-bottom: var(--spacing-lg);
}

.label {
  display: block;
  margin-bottom: var(--spacing-md);
  font-weight: 600;
  color: var(--text-primary);
  font-size: var(--font-size-base);
}

.typeGrid,
.themeGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: var(--spacing-sm);
}

.typeCard,
.themeCard {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-md);
  border: 2px solid var(--border);
  border-radius: var(--radius);
  background-color: var(--surface);
  cursor: pointer;
  transition: var(--transition-base);
  position: relative;
  overflow: hidden;
}

.typeCard:hover,
.themeCard:hover {
  border-color: var(--primary-light);
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.typeCardActive,
.themeCardActive {
  border-color: var(--primary);
  background-color: rgba(var(--primary-rgb), 0.05);
  box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.1);
}

.typeIcon {
  font-size: 24px;
  margin-bottom: var(--spacing-xs);
}

.typeLabel,
.themeLabel {
  font-size: var(--font-size-sm);
  font-weight: 500;
  color: var(--text-primary);
}

.themePreview {
  width: 40px;
  height: 40px;
  border-radius: var(--radius);
  border: 1px solid var(--border);
  margin-bottom: var(--spacing-xs);
}

.textarea {
  width: 100%;
  padding: var(--spacing-md);
  border: 2px solid var(--border);
  border-radius: var(--radius);
  background-color: var(--surface);
  color: var(--text-primary);
  font-size: var(--font-size-base);
  font-family: inherit;
  resize: vertical;
  min-height: 120px;
  transition: var(--transition-base);
  line-height: 1.6;
}

.textarea:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.15);
  background-color: var(--surface-secondary);
}

.textarea::placeholder {
  color: var(--text-tertiary);
  font-style: italic;
}

.inputError {
  border-color: var(--error);
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.15);
}

.errorText {
  display: block;
  color: var(--error);
  font-size: var(--font-size-sm);
  margin-top: var(--spacing-xs);
  font-weight: 500;
}

.charCount {
  text-align: right;
  font-size: var(--font-size-xs);
  color: var(--text-tertiary);
  margin-top: var(--spacing-xs);
}

.examples {
  margin-bottom: var(--spacing-xl);
  padding: var(--spacing-lg);
  background-color: var(--surface-secondary);
  border-radius: var(--radius-lg);
  border: 1px solid var(--border);
}

.examplesTitle {
  font-size: var(--font-size-base);
  font-weight: 600;
  color: var(--text-primary);
  margin: 0 0 var(--spacing-md) 0;
}

.examplesList {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
  max-height: 200px;
  overflow-y: auto;
}

.exampleButton {
  display: flex;
  align-items: center;
  justify-content: space-between;
  text-align: left;
  padding: var(--spacing-sm) var(--spacing-md);
  background-color: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  color: var(--text-secondary);
  font-size: var(--font-size-sm);
  cursor: pointer;
  transition: var(--transition-base);
  group: hover;
}

.exampleButton:hover {
  background-color: var(--surface-hover);
  border-color: var(--primary);
  color: var(--primary);
  transform: translateX(4px);
}

.exampleText {
  flex: 1;
  line-height: 1.4;
}

.exampleButton svg {
  opacity: 0;
  transform: translateX(-4px);
  transition: var(--transition-base);
}

.exampleButton:hover svg {
  opacity: 1;
  transform: translateX(0);
}

.actions {
  display: flex;
  gap: var(--spacing-md);
  justify-content: flex-end;
  padding-top: var(--spacing-lg);
  border-top: 1px solid var(--border);
}

.cancelButton {
  padding: var(--spacing-sm) var(--spacing-lg);
  background-color: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  color: var(--text-secondary);
  font-weight: 600;
  cursor: pointer;
  transition: var(--transition-base);
}

.cancelButton:hover {
  background-color: var(--surface-hover);
  border-color: var(--text-secondary);
  color: var(--text-primary);
}

.generateButton {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-sm) var(--spacing-xl);
  background: linear-gradient(135deg, var(--primary), var(--secondary));
  border: none;
  border-radius: var(--radius);
  color: white;
  font-weight: 700;
  cursor: pointer;
  transition: var(--transition-base);
  position: relative;
  overflow: hidden;
}

.generateButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  transition: left 0.5s ease;
}

.generateButton:hover:not(:disabled)::before {
  left: 100%;
}

.generateButton:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 8px 20px rgba(var(--primary-rgb), 0.4);
}

.generateButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.spinner {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top-color: white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.progressDots {
  display: flex;
  gap: 2px;
}

.progressDots span {
  animation: blink 1.4s infinite both;
}

.progressDots span:nth-child(2) {
  animation-delay: 0.2s;
}

.progressDots span:nth-child(3) {
  animation-delay: 0.4s;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

@keyframes blink {
  0%, 80%, 100% { opacity: 0; }
  40% { opacity: 1; }
}

/* Responsive */
@media (max-width: 768px) {
  .formRow {
    grid-template-columns: 1fr;
    gap: var(--spacing-md);
  }
  
  .typeGrid,
  .themeGrid {
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  }
  
  .header,
  .form {
    padding: var(--spacing-md);
  }
  
  .actions {
    flex-direction: column;
  }
  
  .examplesList {
    max-height: 150px;
  }
}

.contentWrapper {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--spacing-lg);
  padding: var(--spacing-lg);
}

@media (min-width: 1200px) {
  .contentWrapper {
    grid-template-columns: 1fr 1fr;
  }
}

.formSection {
  flex: 1;
  overflow-y: auto;
}

.previewSection {
  flex: 1;
  background-color: var(--surface-secondary);
  border-radius: var(--radius);
  border: 1px solid var(--border);
  overflow: hidden;
  height: 100%;
  min-height: 400px;
  display: flex;
  flex-direction: column;
}

.previewHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-sm) var(--spacing-md);
  background-color: var(--surface);
  border-bottom: 1px solid var(--border);
}

.previewTitle {
  font-size: var(--font-size-base);
  font-weight: 600;
  margin: 0;
}

.previewNote {
  font-size: var(--font-size-xs);
  color: var(--text-tertiary);
}

.progressBar {
  margin-bottom: var(--spacing-md);
  height: 6px;
  background-color: var(--surface-secondary);
  border-radius: 3px;
  overflow: hidden;
  position: relative;
}

.progressFill {
  height: 100%;
  background: linear-gradient(90deg, var(--primary), var(--secondary));
  border-radius: 3px;
  transition: width 0.3s ease;
}

.progressLabel {
  position: absolute;
  right: 0;
  top: 10px;
  font-size: var(--font-size-xs);
  color: var(--text-secondary);
  display: flex;
  align-items: center;
}

.colorGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
  gap: var(--spacing-sm);
}

.colorCard {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-sm);
  border: 2px solid var(--border);
  border-radius: var(--radius);
  background-color: var(--surface);
  cursor: pointer;
  transition: var(--transition-base);
}

.colorCard:hover {
  border-color: var(--primary-light);
  transform: translateY(-2px);
}

.colorCardActive {
  border-color: var(--primary);
  background-color: rgba(var(--primary-rgb), 0.05);
  box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.1);
}

.colorSwatch {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  border: 1px solid var(--border);
}

.colorLabel {
  font-size: var(--font-size-xs);
  font-weight: 500;
  color: var(--text-primary);
}

.complexitySlider {
  display: flex;
  width: 100%;
  border-radius: var(--radius);
  border: 1px solid var(--border);
  overflow: hidden;
  background-color: var(--surface-secondary);
}

.complexityOption {
  flex: 1;
  padding: var(--spacing-sm) var(--spacing-md);
  text-align: center;
  font-size: var(--font-size-sm);
  font-weight: 500;
  background-color: transparent;
  border: none;
  cursor: pointer;
  transition: var(--transition-base);
  color: var(--text-secondary);
}

.complexityOption:hover {
  background-color: var(--surface-hover);
}

.complexityActive {
  background-color: var(--surface);
  color: var(--primary);
  box-shadow: inset 0 -3px 0 var(--primary);
}

.complexityDescription {
  font-size: var(--font-size-xs);
  color: var(--text-secondary);
  margin-top: var(--spacing-xs);
  min-height: 20px;
}

.actionsLeft {
  display: flex;
}

.actionsRight {
  display: flex;
  gap: var(--spacing-md);
}

.previewButton {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-sm) var(--spacing-lg);
  background-color: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  color: var(--text-secondary);
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition-base);
}

.previewButton:hover:not(:disabled) {
  background-color: var(--surface-secondary);
  color: var(--text-primary);
  border-color: var(--border-hover);
}

.previewButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

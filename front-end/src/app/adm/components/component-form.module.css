/* Estilos específicos para o formulário de componentes */

/* Form styling */
.componentForm {
  padding: var(--spacing-lg);
  background-color: var(--surface);
  border-radius: var(--radius);
  border: 1px solid var(--border);
  box-shadow: var(--shadow-sm);
  animation: fadeIn 0.3s ease;
  transition: background-color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.formTitle {
  font-size: var(--font-size-lg);
  font-weight: 600;
  color: var(--text-primary);
  margin: 0 0 var(--spacing-lg) 0;
  padding-bottom: var(--spacing-sm);
  border-bottom: 1px solid var(--border);
  position: relative;
  transition: color 0.3s ease, border-color 0.3s ease;
}

.formTitle::after {
  content: '';
  position: absolute;
  bottom: -1px;
  left: 0;
  width: 60px;
  height: 2px;
  background-color: var(--primary);
  transition: background-color 0.3s ease;
}

.formGroup {
  margin-bottom: var(--spacing-md);
}

.formGroup label {
  display: block;
  font-size: var(--font-size-sm);
  font-weight: 500;
  color: var(--text-primary);
  margin-bottom: var(--spacing-xs);
  transition: color 0.3s ease;
}

.formInput, .formSelect, .formTextarea {
  width: 100%;
  padding: 12px 14px;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border);
  background-color: var(--surface);
  color: var(--text-primary);
  font-size: var(--font-size-sm);
  transition: all 0.2s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

.formInput:focus, .formSelect:focus, .formTextarea:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.15);
}

.formTextarea {
  resize: vertical;
  min-height: 100px;
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
  line-height: 1.5;
}

.formSelect {
  -webkit-appearance: none;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%236b7280' stroke-width='2'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 12px center;
  background-size: 16px;
  padding-right: 36px;
}

/* Enhanced color picker styles */
.enhancedColorPicker {
  position: relative;
  width: 100%;
}

.colorPickerContainer {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  position: relative;
}

.colorPreview {
  width: 36px;
  height: 36px;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border);
  flex-shrink: 0;
  transition: all 0.2s ease, border-color 0.3s ease;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.colorPreview:hover {
  transform: scale(1.05);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.colorPreviewInner {
  opacity: 0;
  transition: opacity 0.2s ease;
  background: rgba(255, 255, 255, 0.3);
  width: 20px;
  height: 20px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(2px);
}

.colorPreview:hover .colorPreviewInner {
  opacity: 1;
}

.colorInput {
  flex: 1;
  padding: 8px 12px;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border);
  background-color: var(--surface);
  color: var(--text-primary);
  font-size: var(--font-size-sm);
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
  transition: all 0.2s ease, background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
  min-width: 90px;
}

.colorInput:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.15);
}

.colorPalette {
  position: absolute;
  top: calc(100% + 4px);
  left: 0;
  background-color: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  padding: var(--spacing-sm);
  z-index: 10;
  box-shadow: var(--shadow-md);
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 8px;
  min-width: 240px;
  transition: background-color 0.3s ease, border-color 0.3s ease;
  animation: scaleIn 0.2s ease;
}

@keyframes scaleIn {
  from { transform: scale(0.95); opacity: 0; }
  to { transform: scale(1); opacity: 1; }
}

.colorOption {
  width: 32px;
  height: 32px;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border);
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  position: relative;
}

.colorOption:hover {
  transform: scale(1.1);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  z-index: 1;
}

.colorOption:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.25);
}

.colorOption::after {
  content: attr(data-tooltip);
  position: absolute;
  bottom: -24px;
  left: 50%;
  transform: translateX(-50%);
  background: var(--surface);
  color: var(--text-primary);
  padding: 2px 6px;
  border-radius: var(--radius-sm);
  font-size: 10px;
  white-space: nowrap;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s ease;
  border: 1px solid var(--border);
  z-index: 2;
}

.colorOption:hover::after {
  opacity: 1;
}

.colorPickerCustom {
  grid-column: span 4;
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  margin-top: 4px;
  padding-top: 8px;
  border-top: 1px solid var(--border);
}

.colorPickerLabel {
  font-size: var(--font-size-xs);
  color: var(--text-secondary);
  font-weight: 500;
  transition: color 0.3s ease;
}

.nativeColorPicker {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 32px;
  height: 32px;
  border: none;
  border-radius: var(--radius-sm);
  background: none;
  cursor: pointer;
}

.nativeColorPicker::-webkit-color-swatch-wrapper {
  padding: 0;
}

.nativeColorPicker::-webkit-color-swatch {
  border: 1px solid var(--border);
  border-radius: var(--radius-sm);
}

.nativeColorPicker::-moz-color-swatch {
  border: 1px solid var(--border);
  border-radius: var(--radius-sm);
}

/* Dark mode specific adjustments for color picker */
@media (prefers-color-scheme: dark) {
  .colorPalette {
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.4);
  }
  
  .colorOption {
    border-color: rgba(255, 255, 255, 0.1);
  }
  
  .colorOption::after {
    background-color: var(--surface);
    border-color: var(--border);
  }
}

/* Template section styling */
.templateSection {
  margin-bottom: var(--spacing-lg);
}

.templateTitle {
  font-size: var(--font-size-sm);
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: var(--spacing-sm);
}

.templateGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
  gap: var(--spacing-sm);
  margin-bottom: var(--spacing-md);
}

.templateItem {
  border: 1px solid var(--border);
  border-radius: var(--radius-sm);
  padding: var(--spacing-xs);
  cursor: pointer;
  transition: all 0.2s ease, background-color 0.3s ease, border-color 0.3s ease;
  background-color: var(--surface);
  text-align: center;
  position: relative;
  overflow: hidden;
}

.templateItem:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-sm);
  border-color: var(--primary-light);
}

.templateItem.active {
  border-color: var(--primary);
  background-color: rgba(var(--primary-rgb), 0.05);
}

.templateItem.active::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 6px;
  height: 100%;
  background-color: var(--primary);
}

.templatePreview {
  height: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: var(--spacing-xs);
  background-color: var(--surface-secondary);
  border-radius: var(--radius-xs);
  transition: background-color 0.3s ease;
}

.templateName {
  font-size: var(--font-size-xs);
  color: var(--text-primary);
  margin: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  transition: color 0.3s ease;
}

.templateDescription {
  font-size: 10px;
  color: var(--text-secondary);
  margin-top: 2px;
  transition: color 0.3s ease;
}

/* Enhanced feedback and validation */
.formValidationMessage {
  font-size: var(--font-size-xs);
  color: var(--text-secondary);
  margin-top: 4px;
  display: flex;
  align-items: center;
  gap: 4px;
  transition: color 0.3s ease;
}

.formValidationMessage.valid {
  color: var(--success);
}

.formValidationMessage.invalid {
  color: var(--google-red);
}

/* Enhanced Form Actions */
.formActions {
  display: flex;
  justify-content: space-between;
  gap: var(--spacing-md);
  margin-top: var(--spacing-lg);
  padding-top: var(--spacing-md);
  border-top: 1px solid var(--border);
  transition: border-color 0.3s ease;
}

.templateButtonsContainer {
  display: flex;
  gap: var(--spacing-sm);
}

.actionButtonsContainer {
  display: flex;
  gap: var(--spacing-sm);
}

.clearTemplateButton {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 10px 16px;
  background-color: var(--surface);
  color: var(--text-secondary);
  border: 1px solid var(--border);
  border-radius: var(--radius-sm);
  font-size: var(--font-size-sm);
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease, background-color 0.3s ease, color 0.3s ease;
}

.clearTemplateButton:hover:not(:disabled) {
  background-color: var(--surface-hover);
  color: var(--google-red);
  border-color: var(--google-red-light);
}

.clearTemplateButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.clearTemplateButton svg {
  color: var(--google-red);
  transition: transform 0.2s ease;
}

.clearTemplateButton:hover svg {
  transform: translateX(-2px);
}

.cancelButton {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px 20px;
  border-radius: var(--radius-sm);
  font-size: var(--font-size-sm);
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease, background-color 0.3s ease, color 0.3s ease;
  background-color: var(--surface);
  color: var(--text-secondary);
  border: 1px solid var(--border);
}

.cancelButton:hover:not(:disabled) {
  background-color: var(--surface-hover);
  color: var(--text-primary);
  transform: translateY(-1px);
}

.cancelButton:active:not(:disabled) {
  transform: translateY(0);
}

.cancelButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.cancelButton svg {
  transition: transform 0.2s ease;
  flex-shrink: 0;
}

.cancelButton:hover svg {
  transform: rotate(90deg);
}

.submitButton {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px 20px;
  border-radius: var(--radius-sm);
  font-size: var(--font-size-sm);
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease, background-color 0.3s ease;
  background: linear-gradient(to right, var(--primary), var(--primary-dark));
  color: white;
  border: none;
  position: relative;
  overflow: hidden;
}

.submitButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.2) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  transition: all 0.6s ease;
}

.submitButton:hover:not(:disabled)::before {
  left: 100%;
}

.submitButton:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(var(--primary-rgb), 0.3);
}

.submitButton:active:not(:disabled) {
  transform: translateY(0);
  box-shadow: 0 2px 6px rgba(var(--primary-rgb), 0.2);
}

.submitButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background: linear-gradient(to right, var(--gray-400), var(--gray-500));
}

.submitButton svg {
  transition: transform 0.2s ease;
  flex-shrink: 0;
}

.submitButton:hover:not(:disabled) svg {
  transform: rotate(90deg);
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .formActions {
    flex-direction: column;
    gap: var(--spacing-sm);
  }
  
  .templateButtonsContainer, 
  .actionButtonsContainer {
    width: 100%;
  }
  
  .actionButtonsContainer {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
  
  .clearTemplateButton,
  .cancelButton, 
  .submitButton {
    width: 100%;
    justify-content: center;
  }
}

/* Dark mode specific adjustments */
@media (prefers-color-scheme: dark) {
  .clearTemplateButton:hover:not(:disabled) {
    background-color: rgba(239, 68, 68, 0.1);
  }
  
  .cancelButton:hover:not(:disabled) {
    background-color: var(--surface-hover);
    border-color: var(--gray-600);
  }
}

/* ...existing code... */

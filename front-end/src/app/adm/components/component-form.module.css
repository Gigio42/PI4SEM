/* Estilos específicos para o formulário de componentes */

/* Form styling */
.componentForm {
  padding: var(--spacing-lg);
  background-color: var(--surface);
  border-radius: var(--radius);
  border: 1px solid var(--border);
  box-shadow: var(--shadow-sm);
  animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.formTitle {
  font-size: var(--font-size-lg);
  font-weight: 600;
  color: var(--text-primary);
  margin: 0 0 var(--spacing-lg) 0;
  padding-bottom: var(--spacing-sm);
  border-bottom: 1px solid var(--border);
  position: relative;
}

.formTitle::after {
  content: '';
  position: absolute;
  bottom: -1px;
  left: 0;
  width: 60px;
  height: 2px;
  background-color: var(--primary);
}

.formGroup {
  margin-bottom: var(--spacing-md);
}

.formGroup label {
  display: block;
  font-size: var(--font-size-sm);
  font-weight: 500;
  color: var(--text-primary);
  margin-bottom: var(--spacing-xs);
}

.formInput, .formSelect, .formTextarea {
  width: 100%;
  padding: 12px 14px;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border);
  background-color: var(--surface);
  color: var(--text-primary);
  font-size: var(--font-size-sm);
  transition: all 0.2s ease;
}

.formInput:focus, .formSelect:focus, .formTextarea:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.15);
}

.formTextarea {
  resize: vertical;
  min-height: 100px;
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
  line-height: 1.5;
}

.formSelect {
  -webkit-appearance: none;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%236b7280' stroke-width='2'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 12px center;
  background-size: 16px;
  padding-right: 36px;
}

.colorPickerContainer {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  position: relative;
}

.colorPreview {
  width: 32px;
  height: 32px;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border);
  flex-shrink: 0;
  transition: all 0.2s ease;
  cursor: pointer;
  position: relative;
  overflow: hidden;
}

.colorPreview:hover {
  transform: scale(1.1);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}

.colorPreview::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 6px;
  background: linear-gradient(to top, rgba(0,0,0,0.1), transparent);
}

.formActions {
  display: flex;
  justify-content: space-between;
  gap: var(--spacing-md);
  margin-top: var(--spacing-lg);
  padding-top: var(--spacing-md);
  border-top: 1px solid var(--border);
}

/* Template section styling */
.templateSection {
  margin-bottom: var(--spacing-lg);
}

.templateTitle {
  font-size: var(--font-size-sm);
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: var(--spacing-sm);
}

.templateGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
  gap: var(--spacing-sm);
  margin-bottom: var(--spacing-md);
}

.templateItem {
  border: 1px solid var(--border);
  border-radius: var(--radius-sm);
  padding: var(--spacing-xs);
  cursor: pointer;
  transition: all 0.2s ease;
  background-color: var(--surface);
  text-align: center;
  position: relative;
  overflow: hidden;
}

.templateItem:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-sm);
  border-color: var(--primary-light);
}

.templateItem.active {
  border-color: var(--primary);
  background-color: rgba(var(--primary-rgb), 0.05);
}

.templateItem.active::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 6px;
  height: 100%;
  background-color: var(--primary);
}

.templatePreview {
  height: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: var(--spacing-xs);
  background-color: var(--surface-secondary);
  border-radius: var(--radius-xs);
}

.templateName {
  font-size: var(--font-size-xs);
  color: var(--text-primary);
  margin: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.templateDescription {
  font-size: 10px;
  color: var(--text-secondary);
  margin-top: 2px;
}

/* Enhanced feedback and validation */
.formValidationMessage {
  font-size: var(--font-size-xs);
  color: var(--text-secondary);
  margin-top: 4px;
  display: flex;
  align-items: center;
  gap: 4px;
}

.formValidationMessage.valid {
  color: var(--success);
}

.formValidationMessage.invalid {
  color: var(--google-red);
}

/* Enhanced submit button */
.submitButton {
  background: linear-gradient(to right, var(--primary), var(--primary-dark));
  color: white;
  border: none;
  position: relative;
  overflow: hidden;
}

.submitButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.2) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  transition: all 0.6s ease;
}

.submitButton:hover::before {
  left: 100%;
}

.submitButton:hover:not(:disabled) {
  background: linear-gradient(to right, var(--primary), var(--primary-dark));
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(var(--primary-rgb), 0.3);
}

.submitButton:active:not(:disabled) {
  transform: translateY(0);
}

.cancelButton {
  background-color: var(--surface);
  color: var(--text-secondary);
  border: 1px solid var(--border);
}

.cancelButton:hover:not(:disabled) {
  background-color: var(--surface-hover);
  color: var(--text-primary);
}

.togglePreviewButton {
  padding: 8px 16px;
  border-radius: var(--radius-sm);
  font-size: var(--font-size-sm);
  background-color: var(--surface-secondary);
  color: var(--text-primary);
  border: 1px solid var(--border);
  cursor: pointer;
  transition: var(--transition);
  margin-bottom: var(--spacing-md);
  display: flex;
  align-items: center;
  gap: 8px;
}

.togglePreviewButton:hover {
  background-color: var(--surface-hover);
  border-color: var(--gray-300);
}

.togglePreviewButton svg {
  transition: transform 0.3s ease;
}

.togglePreviewButton:hover svg {
  transform: translateY(-1px);
}

.previewToggle {
  margin-bottom: var(--spacing-md);
}

.errorMessage {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-md);
  background-color: rgba(239, 68, 68, 0.1);
  color: var(--google-red);
  border-radius: var(--radius-sm);
  margin-bottom: var(--spacing-md);
  border-left: 3px solid var(--google-red);
  animation: slideIn 0.3s ease;
}

@keyframes slideIn {
  from { opacity: 0; transform: translateX(-10px); }
  to { opacity: 1; transform: translateX(0); }
}

.smallSpinner {
  width: 18px;
  height: 18px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: white;
  animation: spin 0.8s linear infinite;
  display: inline-block;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

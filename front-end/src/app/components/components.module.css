/* Estilos para a página de componentes */
.pageWrapper {
  min-height: 100vh;
  background-color: var(--background);
  color: var(--foreground);
}

.layoutContainer {
  display: flex;
  position: relative;
  min-height: calc(100vh - 64px);
}

.mainContent {
  flex: 1;
  padding: 88px 32px 24px 32px; /* Increased top padding to account for header height (64px + 24px) */
  margin-left: 240px;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  opacity: 0;
  transform: translateY(10px);
  overflow-x: hidden;
  min-height: calc(100vh - 64px);
  background-color: var(--background);
}

.loaded {
  opacity: 1;
  transform: translateY(0);
}

/* Quando a sidebar está colapsada */
.sidebarCollapsed .mainContent {
  margin-left: 64px;
}

/* Responsividade para dispositivos móveis */
@media (max-width: 768px) {
  .mainContent {
    margin-left: 0;
    padding: 24px 20px;
  }
  
  .sidebarCollapsed .mainContent {
    margin-left: 0;
  }
}

.contentHeader {
  margin-bottom: 2rem;
}

.pageTitle {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 0.5rem;
  background: linear-gradient(90deg, var(--primary), var(--primary-light));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  display: inline-block;
}

.pageDescription {
  font-size: 1rem;
  color: var(--text-secondary);
  max-width: 600px;
}

/* Filtros e busca */
.filterContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.searchBox {
  position: relative;
  flex: 1;
  max-width: 400px;
}

.searchInput {
  width: 100%;
  padding: 0.75rem 1rem 0.75rem 2.5rem;
  border-radius: var(--radius);
  border: 1px solid var(--border);
  background-color: var(--surface);
  color: var(--text-primary);
  font-size: var(--font-size-base);
  transition: all 0.2s ease;
}

.searchInput:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.1);
}

.searchIcon {
  position: absolute;
  left: 0.75rem;
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-tertiary);
  pointer-events: none;
}

.filterSelect {
  min-width: 200px;
}

.categorySelect {
  width: 100%;
  padding: 0.75rem 1rem;
  border-radius: var(--radius);
  border: 1px solid var(--border);
  background-color: var(--surface);
  color: var(--text-primary);
  font-size: var(--font-size-base);
  cursor: pointer;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23666' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M6 9l6 6 6-6'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 0.75rem center;
  background-size: 16px;
  transition: all 0.2s ease;
}

.categorySelect:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.1);
}

/* Grid de componentes */
.componentsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1.5rem;
  margin-bottom: 2rem;
}

/* Card de componente */
.componentCard {
  background-color: var(--surface);
  border-radius: var(--radius);
  overflow: hidden;
  height: 100%;
  display: flex;
  flex-direction: column;
  box-shadow: var(--shadow);
  transition: all 0.3s ease;
  position: relative;
  border: 1px solid var(--border);
}

.componentCard:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-md);
  border-color: rgba(var(--primary-rgb), 0.2);
}

/* Cabeçalho do card */
.componentHeader {
  padding: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid var(--border);
}

.componentName {
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 70%;
}

.componentCategory {
  font-size: 0.75rem;
  color: var(--primary);
  background-color: rgba(var(--primary-rgb), 0.1);
  padding: 0.25rem 0.5rem;
  border-radius: var(--radius-full);
  font-weight: 500;
}

/* Preview do componente */
.componentPreview {
  height: 120px;
  background-color: var(--surface-secondary);
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
}

.previewContent {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

.previewLabel {
  color: var(--text-secondary);
  font-size: 0.875rem;
}

/* Código CSS */
.componentCode {
  padding: 1rem;
  background-color: var(--surface);
  color: var(--text-secondary);
  font-family: monospace;
  font-size: 0.875rem;
  overflow: hidden;
  flex-grow: 1;
  position: relative;
  max-height: 100px;
  border-top: 1px solid var(--border);
}

.componentCode pre {
  margin: 0;
  white-space: pre-wrap;
  overflow: hidden;
}

.componentCode::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 30px;
  background: linear-gradient(transparent, var(--surface));
}

/* Ações */
.componentActions {
  padding: 1rem;
  display: flex;
  justify-content: space-between;
  border-top: 1px solid var(--border);
}

.viewButton, .copyButton {
  padding: 0.5rem 1rem;
  border-radius: var(--radius-sm);
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  border: none;
}

.viewButton {
  background-color: rgba(var(--primary-rgb), 0.1);
  color: var(--primary);
}

.viewButton:hover {
  background-color: rgba(var(--primary-rgb), 0.2);
}

.copyButton {
  background-color: var(--primary);
  color: white;
}

.copyButton:hover {
  background-color: var(--primary-dark);
}

/* Estados de carregamento e erro */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 4rem 0;
  color: var(--text-secondary);
}

.loadingSpinner {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  border: 3px solid rgba(var(--primary-rgb), 0.1);
  border-top-color: var(--primary);
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.errorMessage {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  padding: 2rem;
  background-color: rgba(239, 68, 68, 0.1);
  color: var(--google-red);
  border-radius: var(--radius);
  margin: 2rem 0;
}

/* Estado vazio */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 4rem 0;
  color: var(--text-secondary);
  text-align: center;
}

.emptyState svg {
  color: var(--text-tertiary);
  margin-bottom: 1.5rem;
}

.emptyState h3 {
  color: var(--text-primary);
  margin-bottom: 0.5rem;
  font-size: 1.25rem;
}

.emptyState p {
  color: var(--text-secondary);
  max-width: 400px;
}

/* Paginação */
.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 2rem;
  gap: 0.5rem;
}

.paginationNumbers {
  display: flex;
  gap: 0.25rem;
}

.paginationNumber {
  min-width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius-sm);
  background-color: var(--surface);
  color: var(--text-secondary);
  border: 1px solid var(--border);
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.paginationNumber:hover:not(.active) {
  background-color: var(--surface-hover);
}

.paginationNumber.active {
  background-color: var(--primary);
  color: white;
  border-color: var(--primary);
}

.paginationButton {
  padding: 0 1rem;
  height: 36px;
  border-radius: var(--radius-sm);
  background-color: var(--surface);
  color: var(--text-secondary);
  border: 1px solid var(--border);
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.paginationButton:hover:not(:disabled) {
  background-color: var(--surface-hover);
}

.paginationButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Estilos para o overlay e sidebar */
.previewOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.2s ease;
  pointer-events: none;
}

.componentCard:hover .previewOverlay {
  opacity: 1;
}

.previewOverlay span {
  background-color: var(--surface);
  color: var(--text-primary);
  padding: 8px 16px;
  border-radius: var(--radius);
  font-size: 14px;
  font-weight: 500;
}

.componentCard {
  cursor: pointer;
}

.backdropOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  z-index: 90;
  animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Ajustes responsivos */
@media (max-width: 768px) {
  .componentsGrid {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  }
}

@media (max-width: 576px) {
  .componentsGrid {
    grid-template-columns: 1fr;
  }
  
  .filterContainer {
    flex-direction: column;
    align-items: stretch;
  }
  
  .searchBox, .filterSelect {
    max-width: none;
  }
}

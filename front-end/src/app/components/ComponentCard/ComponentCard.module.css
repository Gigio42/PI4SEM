/* Unified ComponentCard styles for all pages */

.componentCard {
  background-color: var(--surface);
  border-radius: var(--radius);
  border: 1px solid var(--border);
  box-shadow: var(--shadow-sm);
  transition: all 0.3s ease;
  overflow: hidden;
  position: relative;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.componentCard:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-md);
  border-color: var(--primary-light);
}

.componentCard.admin {
  min-height: 420px;
  max-height: 450px;
}

.componentCard.user {
  min-height: 380px;
  cursor: pointer;
}

.cardHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  padding: var(--spacing-md);
  background-color: var(--surface-secondary);
  border-bottom: 1px solid var(--border);
  min-height: 80px;
}

.cardHeaderContent {
  flex: 1;
  min-width: 0;
}

.componentName {
  font-size: var(--font-size-lg);
  font-weight: 600;
  color: var(--text-primary);
  margin: 0 0 var(--spacing-xs) 0;
  line-height: 1.3;
  word-wrap: break-word;
}

.componentCategory {
  font-size: var(--font-size-sm);
  color: var(--text-secondary);
  background-color: rgba(var(--primary-rgb), 0.1);
  padding: 4px 8px;
  border-radius: var(--radius-sm);
  font-weight: 500;
  display: inline-block;
}

.cardPreview {
  flex: 1;
  position: relative;
  min-height: 200px;
  background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
  overflow: hidden;
}

.previewContainer {
  width: 100%;
  height: 100%;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.previewOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 10;
}

.componentCard:hover .previewOverlay {
  opacity: 1;
}

.previewOverlay span {
  color: white;
  font-weight: 500;
  font-size: var(--font-size-sm);
  text-align: center;
  padding: var(--spacing-sm);
}

.cardBody {
  padding: var(--spacing-md);
  border-bottom: 1px solid var(--border);
  min-height: 60px;
  display: flex;
  align-items: center;
}

.componentMeta {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.componentColor {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  font-size: var(--font-size-sm);
  color: var(--text-secondary);
}

.colorPreview {
  width: 20px;
  height: 20px;
  border-radius: var(--radius-sm);
  border: 2px solid var(--border);
  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);
}

.cardFooter {
  padding: var(--spacing-md);
  background-color: var(--surface);
  margin-top: auto;
}

.adminActions,
.userActions {
  display: flex;
  gap: var(--spacing-sm);
  justify-content: space-between;
  align-items: center;
}

.adminActions {
  justify-content: flex-start;
}

.actionButton {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid var(--border);
  border-radius: var(--radius-sm);
  background-color: var(--surface);
  color: var(--text-secondary);
  font-size: var(--font-size-sm);
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
  white-space: nowrap;
}

.actionButton:hover {
  border-color: var(--primary);
  color: var(--primary);
  background-color: rgba(var(--primary-rgb), 0.05);
  transform: translateY(-1px);
}

.previewButton {
  background-color: var(--primary);
  color: white;
  border-color: var(--primary);
}

.previewButton:hover {
  background-color: var(--primary-dark);
  border-color: var(--primary-dark);
  color: white;
}

.editButton:hover {
  border-color: #f59e0b;
  color: #f59e0b;
  background-color: rgba(245, 158, 11, 0.05);
}

.deleteButton:hover {
  border-color: var(--google-red);
  color: var(--google-red);
  background-color: rgba(239, 68, 68, 0.05);
}

.detailsButton {
  flex: 1;
}

/* Admin layout improvements */
.componentsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: var(--spacing-lg);
  padding: var(--spacing-md);
}

@media (max-width: 1200px) {
  .componentsGrid {
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: var(--spacing-md);
  }
}

@media (max-width: 768px) {
  .componentsGrid {
    grid-template-columns: 1fr;
    gap: var(--spacing-md);
    padding: var(--spacing-sm);
  }
  
  .componentCard.admin {
    min-height: 400px;
    max-height: 420px;
  }
  
  .adminActions {
    flex-direction: column;
    gap: var(--spacing-xs);
  }
  
  .actionButton {
    width: 100%;
    justify-content: center;


  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(var(--primary-rgb), 0.3);
}
}
.editButton {
  background-color: rgba(59, 130, 246, 0.1);
  border-color: rgba(59, 130, 246, 0.2);
  color: #3b82f6;
}

.editButton:hover {
  background-color: rgba(59, 130, 246, 0.15);
  border-color: #3b82f6;
  transform: translateY(-1px);
  box-shadow: 0 3px 6px rgba(59, 130, 246, 0.15);
}

.deleteButton {
  background-color: rgba(239, 68, 68, 0.1);
  border-color: rgba(239, 68, 68, 0.2);
  color: #ef4444;
}

.deleteButton:hover {
  background-color: rgba(239, 68, 68, 0.15);
  border-color: #ef4444;
  transform: translateY(-1px);
  box-shadow: 0 3px 6px rgba(239, 68, 68, 0.15);
}

/* Enhanced grid layout for components page */
.componentsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 2rem;
  padding: 2rem;
  max-width: 1400px;
  margin: 0 auto;
}

/* Page layout */
.pageWrapper {
  min-height: 100vh;
  background: var(--background);
}

.layoutContainer {
  display: flex;
  min-height: calc(100vh - 80px); /* Adjust for header height */
  margin-top: 80px;
}

.mainContent {
  flex: 1;
  margin-left: 250px; /* Sidebar width */
  padding: 2rem;
  opacity: 0;
  transform: translateY(20px);
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  width: calc(100% - 250px);
}

.mainContent.loaded {
  opacity: 1;
  transform: translateY(0);
}

/* Content header */
.contentHeader {
  max-width: 1400px;
  margin: 0 auto 3rem auto;
  text-align: center;
}

.pageTitle {
  font-size: 2.5rem;
  font-weight: 800;
  color: var(--text-primary);
  margin: 0 0 1rem 0;
  background: linear-gradient(135deg, var(--text-primary) 0%, var(--primary) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.pageDescription {
  font-size: 1.125rem;
  color: var(--text-secondary);
  margin: 0;
  max-width: 600px;
  margin: 0 auto;
  line-height: 1.6;
}

/* Filter container */
.filterContainer {
  max-width: 1400px;
  margin: 0 auto 3rem auto;
  display: flex;
  gap: 1.5rem;
  align-items: center;
  flex-wrap: wrap;
}

.searchWrapper {
  flex: 1;
  min-width: 300px;
  position: relative;
}

.searchInput {
  width: 100%;
  padding: 1rem 1.5rem;
  border: 2px solid var(--border);
  border-radius: 12px;
  font-size: 1rem;
  background: var(--surface);
  color: var(--text-primary);
  transition: all 0.3s ease;
}

.searchInput:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 4px rgba(var(--primary-rgb), 0.1);
  background: var(--surface);
}

.categoryFilter {
  padding: 1rem 1.5rem;
  border: 2px solid var(--border);
  border-radius: 12px;
  font-size: 1rem;
  background: var(--surface);
  color: var(--text-primary);
  cursor: pointer;
  transition: all 0.3s ease;
  min-width: 200px;
}

.categoryFilter:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 4px rgba(var(--primary-rgb), 0.1);
}

/* Loading and error states */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 4rem 2rem;
  text-align: center;
  min-height: 400px;
}

.loadingSpinner {
  width: 48px;
  height: 48px;
  border: 4px solid rgba(var(--primary-rgb), 0.1);
  border-top-color: var(--primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1.5rem;
}

.loadingText {
  font-size: 1.125rem;
  color: var(--text-secondary);
  font-weight: 500;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.errorMessage {
  text-align: center;
  padding: 3rem 2rem;
  background: rgba(239, 68, 68, 0.05);
  border: 1px solid rgba(239, 68, 68, 0.2);
  border-radius: 12px;
  margin: 2rem auto;
  max-width: 600px;
}

.errorMessage p {
  color: #dc2626;
  font-size: 1.125rem;
  margin-bottom: 1.5rem;
}

.retryButton {
  background: var(--primary);
  color: white;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
}

.retryButton:hover {
  background: var(--primary-dark);
  transform: translateY(-1px);
}

/* Pagination */
.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  margin-top: 3rem;
  padding: 2rem 0;
}

.paginationButton {
  padding: 0.75rem 1.5rem;
  border: 1px solid var(--border);
  background: var(--surface);
  color: var(--text-primary);
  border-radius: 8px;
  cursor: pointer;
  font-weight: 500;
  transition: all 0.2s ease;
}

.paginationButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.paginationButton:not(:disabled):hover {
  background: var(--primary);
  color: white;
  border-color: var(--primary);
}

.paginationNumbers {
  display: flex;
  gap: 0.5rem;
}

.paginationNumber {
  padding: 0.75rem 1rem;
  border: 1px solid var(--border);
  background: var(--surface);
  color: var(--text-primary);
  border-radius: 8px;
  cursor: pointer;
  font-weight: 500;
  transition: all 0.2s ease;
  min-width: 44px;
  text-align: center;
}

.paginationNumber:hover {
  background: var(--surface-hover);
  border-color: var(--primary);
}

.paginationNumber.active {
  background: var(--primary);
  color: white;
  border-color: var(--primary);
}

/* Preview sidebar */
.previewSidebar {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  width: 60%;
  max-width: 800px;
  min-width: 600px;
  background: var(--surface);
  border-left: 1px solid var(--border);
  box-shadow: -8px 0 32px rgba(0, 0, 0, 0.15);
  z-index: 1000;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  animation: slideInRight 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes slideInRight {
  from { transform: translateX(100%); }
  to { transform: translateX(0); }
}

.previewSidebarHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 2rem;
  border-bottom: 1px solid var(--border);
  background: var(--surface-secondary);
}

.previewSidebarTitle {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--text-primary);
  margin: 0;
}

.closeSidebarButton {
  padding: 0.75rem;
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: 8px;
  cursor: pointer;
  color: var(--text-secondary);
  transition: all 0.2s ease;
}

.closeSidebarButton:hover {
  background: var(--surface-hover);
  color: var(--text-primary);
  border-color: var(--primary);
}

.previewSidebarContent {
  flex: 1;
  padding: 2rem;
}

.sidebarBackdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
  z-index: 999;
  animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Responsive design */
@media (max-width: 1200px) {
  .componentsGrid {
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 1.5rem;
    padding: 1.5rem;
  }
  
  .mainContent {
    margin-left: 0;
    width: 100%;
    padding: 1.5rem;
  }
  
  .previewSidebar {
    width: 90%;
    min-width: 320px;
  }
}

@media (max-width: 768px) {
  .componentsGrid {
    grid-template-columns: 1fr;
    gap: 1rem;
    padding: 1rem;
  }
  
  .componentCard {
    height: auto;
    min-height: 400px;
  }
  
  .filterContainer {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
  }
  
  .searchWrapper {
    min-width: unset;
  }
  
  .categoryFilter {
    min-width: unset;
  }
  
  .pageTitle {
    font-size: 2rem;
  }
  
  .contentHeader {
    margin-bottom: 2rem;
  }
  
  .previewSidebar {
    width: 100%;
    min-width: unset;
  }
  
  .userActions {
    flex-direction: column;
    gap: 0.75rem;
  }
  
  .actionButton {
    width: 100%;
  }
}

